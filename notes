
----------------

- cmd/oj
 - add -a and -asm option
  - allow sen format
  - if starts with [ then inline else a file

- asm package
 - should an alias be added to Fn?
 - functions
  + asm
  + inspect
  - add
  - sub or minus
  - divide div
  - multiple times
  - mod
  - get
  - set
  - append - strings or to a list
  - list - builds a list
  - quote
  - and
  - or
  - not
  - gt >
  - lt <
  - gte >=
  - lte <=
  - equal ==
  - cond switch
  - each
  - float
  - int
  - string - optional format specific to type being converted
  - time - option format if from string
  - zone - time to utc, local, offset
  - include
  - downcase
  - upcase
  - title
  - substr
  - trim
  - replace
  - join
  - split
  - has
  - len or length or size
  - sort
  - reverse
  - nth - list or can jp handle that



- pretty json format
 - tighten up when possible
  - kind of like lisp

 - regex op =~
  - /^xyz&/
 - in addition to parse callback support chan for results
 - cmd/oj
  - read args from file (SEN format)
   - also check ~/.oj.fin or ~/.oj - graphql emacs mode works well
  - palette in cfg file
  - build or restructure json
   - use a template based approach along with JSONPath
- advanced ops
 - in - a in [1,2,3]
 - exists, empty, or has
 - size or length - [?(@.x size > 3)] or [?(size @.x > 3)]
-------------
- cmd/oj
  -colors list of colors or maybe map?
   -p (palette) key=red
   -key red

------------------

- Match a JavaScript regular expression. For example, [?(@.description =~ /cat.*/i)]
- Exists syntax? [?(@.x exists)]
